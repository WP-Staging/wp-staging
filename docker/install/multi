#!/bin/bash
PATH_MULTI=/var/www/multi/

chown www-data:www-data /var/www/multi -R

echo "Installing WordPress Multi in ${PATH_MULTI}"
cd $PATH_MULTI || exit 1

if [ ! -f $PATH_MULTI"wp-config.php" ]; then
  echo "Downloading WordPress"
  su www-data -c "wp core download"
fi

if [ -f $PATH_MULTI"wp-config.php" ]; then
  echo "Backing up wp-config.php file..."
  mv $PATH_MULTI"wp-config.php" $PATH_MULTI"wp-config.php.bak"
fi

RES=$(su www-data -c "wp --path=$PATH_MULTI core config --dbname=$MYSQL_DATABASE_MULTI --dbuser=$MYSQL_USER --dbpass=$MYSQL_PASSWORD --dbhost=database --dbprefix=wp_")
if [[ $RES != *"Success"* ]]; then
  echo "Failed to create config..."
  if [ -f $PATH_MULTI"wp-config.php.bak" ]; then
    echo "Restoring wp-config.php backup..."
    mv $PATH_MULTI"wp-config.php.bak" $PATH_MULTI"wp-config.php"
  fi
  exit 1
fi

if [ -f $PATH_MULTI"wp-config.php.bak" ]; then
  echo -n "Removing wp-config.php backup..."
  rm -f $PATH_MULTI"wp-config.php.bak"
fi

RES=$(su www-data -c "wp --path=$PATH_MULTI db query 'SHOW DATABASES LIKE \"$MYSQL_DATABASE_MULTI\";'" )
if [[ ! ${#RES} -gt 0 ]]; then
  echo "Database not found, creating database..."
  su www-data -c "wp --path=$PATH_MULTI db create"
  exit 1
fi

echo "Installing WP"
su www-data -c "wp --path=$PATH_MULTI core install --url=\"https://${HOST_MULTI}\" --title=\"WP Staging Multi\" --admin_user=\"${WP_ADMIN_USERNAME}\" --admin_password=\"${WP_ADMIN_PASSWORD}\" --admin_email=\"${WP_ADMIN_EMAIL}\""

echo "Updating wp-config.php..."
su www-data -c "wp config set WP_DEBUG true"
su www-data -c "wp config set WP_DEBUG_DISPLAY false"
su www-data -c "wp config set WP_DEBUG_LOG true"

chmod 644 "${PATH_MULTI}wp-config.php"

echo "Disabling Unneccessary Plugins"
su www-data -c "wp --path=$PATH_MULTI plugin deactivate hello"
su www-data -c "wp --path=$PATH_MULTI plugin deactivate akismet"
su www-data -c "wp --path=$PATH_MULTI plugin delete hello"
su www-data -c "wp --path=$PATH_MULTI plugin delete akismet"

echo "Enabling WP-Staging PRO Plugin: "
su www-data -c "wp --path=$PATH_MULTI plugin activate wp-staging-pro"
su www-data -c "wp --path=$PATH_MULTI db query 'INSERT INTO wp_options (option_name, option_value) VALUES(\"wpstg_license_key\", \"${LICENSE_KEY}\");'"

echo "Installing Extra Plugins"
su www-data -c "wp plugin install query-monitor --activate"

UPLOADS_PATH=$PATH_MULTI"wp-content/uploads"
if [ ! -d $UPLOADS_PATH ]; then
  echo "Enabling uploads..."
  mkdir $UPLOADS_PATH
  chmod 775 $UPLOADS_PATH
fi

echo "Converting to Multi Site"
su www-data -c "wp --path=$PATH_MULTI core multisite-convert"

# Check whether given credentials are valid; exit status 0 if valid, otherwise 1 Used for debugging purposes
echo "Verify wp credentials"
#su www-data -c "wp user check-password admin password"
RES=$(su www-data -c "wp user check-password admin password")
echo $RES
if [$RES == 0]; then
 echo "Valid Credentials!"
 else
 echo "Invalid Credentials!"
fi

echo "Get WP admin meta data"
su www-data -c "wp db query 'SELECT * FROM wp_usermeta WHERE user_id = 1 AND meta_key = \"wp_capabilities\"' "
su www-data -c "wp db query ' SELECT * FROM wp_usermeta WHERE user_id = 1 AND meta_key = \"wp_user_level\"' "
